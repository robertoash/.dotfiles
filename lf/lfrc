# Basic Settings
set hidden true
set ignorecase true
set icons true

# Custom Functions
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

# Trash bindings
#cmd trash ${{
#  files=$(printf "$fx" | tr '\n' ';')
#  while [ "$files" ]; do
#    file=${files%%;*}
#
#    trash-put "$(basename "$file")"
#    if [ "$files" = "$file" ]; then
#      files=''
#    else
#      files="${files#*;}"
#    fi
#  done
#}}
#


# move current file or selected files to trash folder
# (also see 'man mv' for backup/overwrite options)
cmd trash %set -f; mv $fx ~/.trash

# use '<delete>' key for either 'trash' or 'delete' command
map <delete> trash
# map <delete> delete

cmd restore_trash ${{
  trash-restore
}}

# Bindings
map d
map m

map c $vscodium "$f"

map au unarchive
map ae $wine "$f"

# Basic Functions
map . set hidden!
map dd trash
map dr restore_trash
map p paste
map x cut
map y copy
map <enter> open
map R reload
map mf mkfile
map md mkdir
#map bg setwallpaper
map C clear

# Movement
map gD cd ~/documents
map gd cd ~/downloads
map gp cd ~/pictures
map gc cd ~/.config
map gr cd ~/repos
map gv cd ~/videos
map gs cd ~/.local/bin
map gt cd ~/.local/share/Trash/files
